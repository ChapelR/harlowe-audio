A.newTrack(id, sources) -> new track
A.track(id) -> get track instances
    Track#play() -> play audio
    Track#forcePlay() -> force audio to start without user interaction
    Track#playWhenPossible() -> play audio after user interacts
    Track#pause() -> pause an audio track
    Track#stop() -> stop an audio track
    Track#mute(boolean) -> mute this audio track
    Track#toggleMute() -> mute or unmute the track
    Track#isMuted() -> check if track is muted right now
    Track#volume(number) -> set track's volume (0.0 to 1.0)
    Track#getVolume(number) -> return the track's current volume
    Track#loop(boolean) -> set the track to loop or stop looping
    Track#seek(seconds) -> seek to a certain part of the track; negative seconds start from the end
    Track#fadeIn(duration) -> fade the track in over a number of seconds from 0 to its volume
    Track#fadeOut(duration) -> fade the track out over a number of seconds from its volume 0
    Track#fadeTo(duration, level) -> fade the track over a number of seconds from its current volume to a target volume
A.createGroup(name, trackList) -> create an audio group, default groups are 'playing' and 'looping'
A.group(name) -> get group instances
    Group#stop -> stop all sounds in group
    Group#pause -> pause all sounds in group
    Group#mute(boolean) -> mute or unmute all sounds in group
    Group#volume(number) -> set volume for all sounds in group
    Group#loop(boolean) -> set all sounds in group to loop or not loop
A.createPlaylist(id, trackList) -> create a playlist
A.playlist(id) -> get playlist instance
    Playlist#shuffle() -> shuffle the order of the songs in the playlist
    Playlist#play(force) -> play the songs in the playlist in order, optionally forcing them to start
    Playlist#random() -> return a random track instance from the playlist
    Playlist#loop(boolean) -> set the playlist to loop or not loop
    Playlist#pause() -> pause the playlist
    Playlist#stop() -> stop the playlist
